[{"C:\\Users\\fapri\\Desktop\\UMN\\Semester 3\\PTI\\LAB\\Week 12\\convert\\src\\App.js":"1","C:\\Users\\fapri\\Desktop\\UMN\\Semester 3\\PTI\\LAB\\Week 12\\convert\\src\\reportWebVitals.js":"2","C:\\Users\\fapri\\Desktop\\UMN\\Semester 3\\PTI\\LAB\\Week 12\\convert\\src\\index.js":"3","C:\\Users\\fapri\\Desktop\\UMN\\Semester 3\\PTI\\LAB\\Week 12\\convert\\src\\Temp.js":"4","C:\\Users\\fapri\\Desktop\\UMN\\Semester 3\\PTI\\LAB\\Week 12\\convert\\src\\Speed.js":"5"},{"size":1130,"mtime":1606731923796,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":591,"mtime":1606700991316,"results":"9","hashOfConfig":"7"},{"size":4840,"mtime":1606732751085,"results":"10","hashOfConfig":"7"},{"size":3777,"mtime":1606716392910,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s2w7yd",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\fapri\\Desktop\\UMN\\Semester 3\\PTI\\LAB\\Week 12\\convert\\src\\App.js",[],"C:\\Users\\fapri\\Desktop\\UMN\\Semester 3\\PTI\\LAB\\Week 12\\convert\\src\\reportWebVitals.js",[],"C:\\Users\\fapri\\Desktop\\UMN\\Semester 3\\PTI\\LAB\\Week 12\\convert\\src\\index.js",["24"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Temp from \"./Temp\"\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <App />\r\n  </ChakraProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\fapri\\Desktop\\UMN\\Semester 3\\PTI\\LAB\\Week 12\\convert\\src\\Temp.js",["25","26","27","28","29","30","31"],"C:\\Users\\fapri\\Desktop\\UMN\\Semester 3\\PTI\\LAB\\Week 12\\convert\\src\\Speed.js",["32","33","34"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Container, FormControl, Input, Select } from '@chakra-ui/react'\r\nimport { m } from 'framer-motion'\r\n\r\nconst speedOpt = [\r\n    {value:\"kmh\",label:\"Kilometer per Hour\"},\r\n    {value:\"mph\",label:\"Mile per Hours\"},\r\n    {value:\"mps\",label:\"Meter per Second\"},\r\n    {value:\"knot\",label:\"Knot\"},\r\n];\r\n\r\nlet optSpeed = speedOpt.map((speed) => (\r\n    <option key={speed.value} value={speed.value}>{speed.label}</option>\r\n))\r\n\r\nfunction kmhTomps(angka){\r\n    return (angka * 5) / 18;\r\n}\r\n\r\nfunction kmhTomph(angka){\r\n    return angka * 0.6214;\r\n}\r\n\r\nfunction kmhToknot(angka){\r\n    return angka * 0.539957;\r\n}\r\n\r\nfunction mpsTokmh(angka){\r\n    return (angka * 18) / 5;\r\n}\r\n\r\nfunction mpsTomph(angka){\r\n    return angka * 2.23694;\r\n}\r\n\r\nfunction mpsToknot(angka){\r\n    return angka * 1.94384;\r\n}\r\n\r\nfunction mphTokmh(angka){\r\n    return angka / 0.6214;\r\n}\r\n\r\nfunction mphTomps(angka){\r\n    return angka / 2.23694;\r\n}\r\n\r\nfunction mphToknot(angka){\r\n    return angka * 0.868976;\r\n}\r\n\r\nfunction knotTokmh(angka){\r\n    return angka * 0.539957;\r\n}\r\n\r\nfunction knotTomps(angka){\r\n    return angka / 1.94384;\r\n}\r\n\r\nfunction knotTomph(angka){\r\n    return angka / 0.868976;\r\n}\r\n\r\nexport default function Speed(){\r\n    const [fromSpeed, setFromSpeed] = useState(0);\r\n    const [resultSpeed, setResultSpeed] = useState(0);\r\n    const [from, setFrom] = useState(\"\");\r\n    const [to, setTo] = useState(\"\");\r\n\r\n    const getFrom = (e) => {\r\n        setFrom(e.target.value)\r\n    }\r\n\r\n    const getFromValue = (e) => {\r\n        setFromSpeed(e.target.value)\r\n    }\r\n\r\n    const getTo = (e) => {\r\n        setTo(e.target.value)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(from === to){\r\n            setResultSpeed(parseFloat(fromSpeed))\r\n        }\r\n        if(from === \"kmh\"){\r\n            if(to === \"mph\"){\r\n                setResultSpeed(kmhTomph(parseFloat(fromSpeed)))\r\n            }else if(to === \"mps\"){\r\n                setResultSpeed(kmhTomps(parseFloat(fromSpeed)))\r\n            }else if(to === \"knot\"){\r\n                setResultSpeed(kmhToknot(parseFloat(fromSpeed)))\r\n            }\r\n        }else if(from === \"mps\"){\r\n            if(to === \"kmh\"){\r\n                setResultSpeed(mpsTokmh(parseFloat(fromSpeed)))\r\n            }else if(to === \"mph\"){\r\n                setResultSpeed(mpsTomph(parseFloat(fromSpeed)))\r\n            }else if(to === \"knot\"){\r\n                setResultSpeed(mpsToknot(parseFloat(fromSpeed)))\r\n            }\r\n        }else if(from === \"mph\"){\r\n            if(to === \"kmh\"){\r\n                setResultSpeed(mphTokmh(parseFloat(fromSpeed)))\r\n            }else if(to === \"mps\"){\r\n                setResultSpeed(mphTomps(parseFloat(fromSpeed)))\r\n            }else if(to === \"knot\"){\r\n                setResultSpeed(mphToknot(parseFloat(fromSpeed)))\r\n            }\r\n        }else if(from === \"knot\"){\r\n            if(to === \"kmh\"){\r\n                setResultSpeed(knotTokmh(parseFloat(fromSpeed)))\r\n            }else if(to === \"mps\"){\r\n                setResultSpeed(knotTomps(parseFloat(fromSpeed)))\r\n            }else if(to === \"mph\"){\r\n                setResultSpeed(knotTomph(parseFloat(fromSpeed)))\r\n            }\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <Container>\r\n                <FormControl>\r\n                    <Input type=\"number\" onChange={getFromValue}/>\r\n                    <Select placeholder=\"From\" onChange={getFrom}>\r\n                        {optSpeed}\r\n                    </Select>\r\n                    <Input type=\"number\" value={resultSpeed}/>\r\n                    <Select placeholder=\"To\" onChange={getTo}>\r\n                        {optSpeed}\r\n                    </Select>\r\n                </FormControl>\r\n            </Container>\r\n        </div>\r\n    )\r\n}",{"ruleId":"35","severity":1,"message":"36","line":5,"column":8,"nodeType":"37","messageId":"38","endLine":5,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":11},{"ruleId":"35","severity":1,"message":"40","line":4,"column":20,"nodeType":"37","messageId":"38","endLine":4,"endColumn":26},{"ruleId":"35","severity":1,"message":"41","line":5,"column":3,"nodeType":"37","messageId":"38","endLine":5,"endColumn":9},{"ruleId":"35","severity":1,"message":"42","line":6,"column":3,"nodeType":"37","messageId":"38","endLine":6,"endColumn":8},{"ruleId":"35","severity":1,"message":"43","line":7,"column":3,"nodeType":"37","messageId":"38","endLine":7,"endColumn":7},{"ruleId":"35","severity":1,"message":"44","line":9,"column":49,"nodeType":"37","messageId":"38","endLine":9,"endColumn":55},{"ruleId":"45","severity":1,"message":"46","line":90,"column":5,"nodeType":"37","endLine":90,"endColumn":14,"suggestions":"47"},{"ruleId":"35","severity":1,"message":"44","line":2,"column":10,"nodeType":"37","messageId":"38","endLine":2,"endColumn":16},{"ruleId":"35","severity":1,"message":"48","line":3,"column":10,"nodeType":"37","messageId":"38","endLine":3,"endColumn":11},{"ruleId":"45","severity":1,"message":"49","line":82,"column":5,"nodeType":"37","endLine":82,"endColumn":14,"suggestions":"50"},"no-unused-vars","'Temp' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setResultTemperature'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [from, to, fromTemperature] as a second argument to the useEffect Hook.",["51"],"'m' is defined but never used.","React Hook useEffect contains a call to 'setResultSpeed'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [from, to, fromSpeed] as a second argument to the useEffect Hook.",["52"],{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},"Add dependencies array: [from, to, fromTemperature]",{"range":"57","text":"58"},"Add dependencies array: [from, to, fromSpeed]",{"range":"59","text":"60"},[3669,3669],", [from, to, fromTemperature]",[3208,3208],", [from, to, fromSpeed]"]